pipeline {
    agent any

    environment {
        HELM_RELEASE = "spring-app"
        HELM_CHART_PATH = "./pipeline"
        NAMESPACE = "your-namespace"
    }

    tools {
        maven 'maven-latest'  // Your configured Maven tool
    }

    stages {
        stage('Build with Maven') {
            steps {
                sh 'mvn clean package -DskipTests -Dmaven.repo.local=./.m2'
            }
        }

        stage('Trigger OpenShift Build') {
            steps {
                withCredentials([string(credentialsId: 'oc-auth', variable: 'OC_TOKEN'),
                                 string(credentialsId: 'oc-link', variable: 'OC_API')]) {
                    sh """
                        oc login $OC_API --token=$OC_TOKEN --insecure-skip-tls-verify
                        oc project $NAMESPACE
                        oc start-build spring-app-buildconfig --follow
                    """
                }
            }
        }

        stage('Deploy with Helm') {
            steps {
                withCredentials([string(credentialsId: 'oc-auth', variable: 'OC_TOKEN'),
                                 string(credentialsId: 'oc-link', variable: 'OC_API')]) {
                    sh """
                        oc login $OC_API --token=$OC_TOKEN --insecure-skip-tls-verify
                        oc project $NAMESPACE
                        helm upgrade --install ${HELM_RELEASE} ${HELM_CHART_PATH} --namespace ${NAMESPACE}
                    """
                }
            }
        }
    }
}
