pipeline {
    agent any

    environment {
        imageTag = "${BUILD_NUMBER}"
        registryUser = "eobard"
        HELM_RELEASE = "spring-app"
        HELM_CHART_PATH = "./pipeline"
        NAMESPACE = "micro-service"
    }

    tools {
        maven 'maven-latest'
    }

    stages {
        stage('Build with Maven') {
            steps {
                sh 'mvn clean package -DskipTests -Dmaven.repo.local=./.m2'
            }
        }

        stage('Build Image') {
            steps {
                sh "docker build -t ${env.registryUser}/openshift-demo-app:${env.imageTag} ."
            }
        }

        stage('Push to Registry') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-auth', passwordVariable: 'PASS', usernameVariable: 'USER')]) {
                    sh """
                        docker login -u $USER -p $PASS
                        docker push $USER/openshift-demo-app:${env.imageTag}
                    """
                }
            }
        }

        stage('Login to OpenShift') {
            steps {
                withCredentials([
                    string(credentialsId: 'oc-auth', variable: 'OC_TOKEN'),
                    string(credentialsId: 'oc-link', variable: 'OC_API')
                ]) {
                    sh '''
                        oc login ${OC_API} --token=${OC_TOKEN} --insecure-skip-tls-verify
                        oc project ${NAMESPACE}
                    '''
                }
            }
        }

        stage('Deploy with Helm') {
            steps {
                sh '''
                    helm upgrade --install ${HELM_RELEASE} ${HELM_CHART_PATH} --namespace ${NAMESPACE}
                '''
            }
        }
    }
}
